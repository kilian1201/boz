  <!DOCTYPE HTML>
<html>
  <%include search.ejs %>
  <title>Newbot - Discord Bots Club</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
    <meta name="author" content="TankSloth">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">  
  <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="The add bot system was fixed on the 03rd of January 2019!">
        <script type="text/javascript" async="" src="https://www.google-analytics.com/analytics.js"></script><script src="/cdn-cgi/apps/head/T4fJcfjbdzoq4qbMb3De1pEr8xY.js"></script><style type="text/css">svg:not(:root).svg-inline--fa{overflow:visible}.svg-inline--fa{display:inline-block;font-size:inherit;height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-lg{vertical-align:-.225em}.svg-inline--fa.fa-w-1{width:.0625em}.svg-inline--fa.fa-w-2{width:.125em}.svg-inline--fa.fa-w-3{width:.1875em}.svg-inline--fa.fa-w-4{width:.25em}.svg-inline--fa.fa-w-5{width:.3125em}.svg-inline--fa.fa-w-6{width:.375em}.svg-inline--fa.fa-w-7{width:.4375em}.svg-inline--fa.fa-w-8{width:.5em}.svg-inline--fa.fa-w-9{width:.5625em}.svg-inline--fa.fa-w-10{width:.625em}.svg-inline--fa.fa-w-11{width:.6875em}.svg-inline--fa.fa-w-12{width:.75em}.svg-inline--fa.fa-w-13{width:.8125em}.svg-inline--fa.fa-w-14{width:.875em}.svg-inline--fa.fa-w-15{width:.9375em}.svg-inline--fa.fa-w-16{width:1em}.svg-inline--fa.fa-w-17{width:1.0625em}.svg-inline--fa.fa-w-18{width:1.125em}.svg-inline--fa.fa-w-19{width:1.1875em}.svg-inline--fa.fa-w-20{width:1.25em}.svg-inline--fa.fa-pull-left{margin-right:.3em;width:auto}.svg-inline--fa.fa-pull-right{margin-left:.3em;width:auto}.svg-inline--fa.fa-border{height:1.5em}.svg-inline--fa.fa-li{width:2em}.svg-inline--fa.fa-fw{width:1.25em}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:#ff253a;border-radius:1em;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;height:1.5em;line-height:1;max-width:5em;min-width:1.5em;overflow:hidden;padding:.25em;right:0;text-overflow:ellipsis;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:0;right:0;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:0;left:0;right:auto;top:auto;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{right:0;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:0;right:auto;top:0;-webkit-transform:scale(.25);transform:scale(.25);-webkit-transform-origin:top left;transform-origin:top left}.fa-lg{font-size:1.33333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:solid .08em #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;position:relative;width:2em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.svg-inline--fa.fa-stack-1x{height:1em;width:1em}.svg-inline--fa.fa-stack-2x{height:2em;width:2em}.fa-inverse{color:#fff}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}</style><link rel="shortcut icon" href="/assets/normalDBB.png" type="image/x-icon">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.2/css/bulma.min.css">
        <script defer="" src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
  <head>
    <script src="css_browser_selector.js" type="text/javascript"></script>
  </head>
<style>
  body{
  backround: #2c2f33;
  }
</style>
  <body>
    <div class="container">
    <h1 class="display-4 text-center">
      New Bot
      </h1> 
      <hr>
      <small class="text-center">
        Hello, in this section you will add your bot. Please provide all the information needed below.
      </small>  
        
<div class="content">
  <br>
                <ul id="rules">
                  <li>You must join our <a href="https://discord.gg/xEy7dRx">Discord Server</a> to add bots.</li>
                  <li>Your bot cannot be a fork of another.</li>
                 <li>Your bot must be secure with all commands, and without much glitches</li>
  </ul>
    <form action="/api/newbot" method="post" id="newboat" class="w3-center">
      <input class="form-control" type="text" id="keyHere" name="key" style="width:0px;height:0px;visibility: hidden;"><br>
      
      <strong><font color="">Client ID</font></strong> <font color="red">*</font>
      <div class="input-group mb-3">
      <input class="form-control" type="text" name="boatID" placeholder="Bot Client ID" required><br>
      </div><!-- 0987889 -->
      <strong><font color="">Prefix</font></strong> <font color="red">*</font>
      <input class="form-control" type="text" name="prefix" placeholder="Prefix" required><br>
      <strong><font color="">Library</font></strong> <font color="red">*</font>
                                  <div class="form-group">
                                <select id="library" name="library" class="form-control custom-select" required>
                                    <option selected value="">Select a library</option>
                                    <option value="Akairo">Akairo</option>
                                    <option value="discordcr">discordcr</option>
                                    <option value="dscord">dscord</option>
                                    <option value="Discord.Net">Discord.Net</option>
                                    <option value="DSharpPlus">DSharpPlus</option>
                                    <option value="Nostrum">Nostrum</option>
                                    <option value="DiscordGo">DiscordGo</option>
                                    <option value="Discord.hs">Discord.hs</option>
                                    <option value="Discord4J">Discord4J</option>
                                    <option value="Discord4J">Discord4J</option>
                                    <option value="Javacord">Javacord</option>
                                    <option value="JDA">JDA</option>
                                    <option value="discord.io">discord.io</option>
                                    <option value="discord.js">discord.js</option>
                                    <option value="Discordie">Discordie</option>
                                    <option value="Eris">Eris</option>
                                    <option value="Discordia">Discordia</option>
                                    <option value="DiscordPHP">DiscordPHP</option>
                                    <option value="RestCord">RestCord</option>
                                    <option value="discord.py">discord.py</option>
                                    <option value="discordrb">discordrb</option>
                                    <option value="discord-rs">discord-rs</option>
                                    <option value="serenity">serenity</option>
                                    <option value="SwiftDiscord">SwiftDiscord</option>
                                    <option value="Sword">Sword</option>
                                    <option value="Custom">Custom</option>
                                </select>
                            </div>
      <strong><font color="">Short Description</font></strong> <font color="red">*</font>
      <input class="form-control" type="textarea" name="description" placeholder="This is like a short description, 300 characters max." maxlength="300" required><br>
      <strong>Long Description</strong> <font color="red">*</font>
      <textarea class="form-control" type="textarea" rows="3" name="longdescription" placeholder="Add your long description, no (CSS) or (HTML) needed. Just use normal text. (max 4k words)" maxlength="4500"></textarea><br>
      <strong><font color="">Github Repository</font></strong>
      <input class="form-control" type="textarea" name="git" placeholder="(Optional)"><br>
      <strong><font color="">Website</font></strong>
      <input class="form-control" type="textarea" name="website" placeholder="(Optional) but recommended"><br>
      <strong><font color="">Support Server</font></strong> <font color="red">*</font>
      <input class="form-control" type="textarea" name="support" placeholder="https://discord.gg/wUmp3lX"><br>
      
      <br>
      <br>
      
      <button class="btn btn-success btn-sm" type="submit" value="Submit">
  <i class="send outline icon"></i><font size="5px">Submit</font>
</button>

</form>   
      </form>

    </div>
  </body>
<script>
    var key = document.getElementById("keyHere");
    function getAllUrlParams(url) {

  // get query string from url (optional) or window
  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);
// NOO
      // come to newbot.js
  // we'll store the parameters here
  var obj = {};

  // if query string exists
  if (queryString) {

    // stuff after # is not part of query string, so get rid of it
    queryString = queryString.split('#')[0];

    // split our query string into its component parts
    var arr = queryString.split('&');

    for (var i=0; i<arr.length; i++) {
      // separate the keys and the values
      var a = arr[i].split('=');

      // in case params look like: list[]=thing1&list[]=thing2
      var paramNum = undefined;
      var paramName = a[0].replace(/\[\d*\]/, function(v) {
        paramNum = v.slice(1,-1);
        return '';
      });

      // set parameter value (use 'true' if empty)
      var paramValue = typeof(a[1])==='undefined' ? true : a[1];

      // (optional) keep case consistent
      paramName = paramName;
      paramValue = paramValue;

      // if parameter name already exists
      if (obj[paramName]) {
        // convert value to array (if still string)
        if (typeof obj[paramName] === 'string') {
          obj[paramName] = [obj[paramName]];
        }
        // if no array index number specified...
        if (typeof paramNum === 'undefined') {
          // put the value on the end of the array
          obj[paramName].push(paramValue);
        }
        // if array index number specified...
        else {
          // put the value at that index number
          obj[paramName][paramNum] = paramValue;
        }
      }
      // if param name doesn't exist yet, set it
      else {
        obj[paramName] = paramValue;
      }
    }
  }

  return obj;
}

    if(getAllUrlParams().code==undefined || getAllUrlParams().code=='undefined'){
      window.location.replace('https://discordbotsclub.org/callback');
    }
    key.value = getAllUrlParams().code;
  </script>